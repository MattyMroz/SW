#ifdefined(__ICCARM__)#pragmasystem_include#elifdefined(__clang__)#pragmaclangsystem_header#endif#ifndefARM_MPU_ARMV8_H#defineARM_MPU_ARMV8_H#defineARM_MPU_ATTR_DEVICE(0U)#defineARM_MPU_ATTR_NON_CACHEABLE(4U)#defineARM_MPU_ATTR_MEMORY_(NT,WB,RA,WA)\(((NT&1U)<<3U)|((WB&1U)<<2U)|((RA&1U)<<1U)|(WA&1U))#defineARM_MPU_ATTR_DEVICE_nGnRnE(0U)#defineARM_MPU_ATTR_DEVICE_nGnRE(1U)#defineARM_MPU_ATTR_DEVICE_nGRE(2U)#defineARM_MPU_ATTR_DEVICE_GRE(3U)#defineARM_MPU_ATTR(O,I)(((O&0xFU)<<4U)|(((O&0xFU)!=0U)?(I&0xFU):((I&0x3U)<<2U)))#defineARM_MPU_SH_NON(0U)#defineARM_MPU_SH_OUTER(2U)#defineARM_MPU_SH_INNER(3U)#defineARM_MPU_AP_(RO,NP)(((RO&1U)<<1U)|(NP&1U))#defineARM_MPU_RBAR(BASE,SH,RO,NP,XN)\((BASE&MPU_RBAR_BASE_Msk)|\((SH<<MPU_RBAR_SH_Pos)&MPU_RBAR_SH_Msk)|\((ARM_MPU_AP_(RO,NP)<<MPU_RBAR_AP_Pos)&MPU_RBAR_AP_Msk)|\((XN<<MPU_RBAR_XN_Pos)&MPU_RBAR_XN_Msk))#defineARM_MPU_RLAR(LIMIT,IDX)\((LIMIT&MPU_RLAR_LIMIT_Msk)|\((IDX<<MPU_RLAR_AttrIndx_Pos)&MPU_RLAR_AttrIndx_Msk)|\(MPU_RLAR_EN_Msk))#ifdefined(MPU_RLAR_PXN_Pos)#defineARM_MPU_RLAR_PXN(LIMIT,PXN,IDX)\((LIMIT&MPU_RLAR_LIMIT_Msk)|\((PXN<<MPU_RLAR_PXN_Pos)&MPU_RLAR_PXN_Msk)|\((IDX<<MPU_RLAR_AttrIndx_Pos)&MPU_RLAR_AttrIndx_Msk)|\(MPU_RLAR_EN_Msk))#endiftypedefstruct{uint32_tRBAR;uint32_tRLAR;}ARM_MPU_Region_t;__STATIC_INLINEvoidARM_MPU_Enable(uint32_tMPU_Control){MPU->CTRL=MPU_Control|MPU_CTRL_ENABLE_Msk;#ifdefSCB_SHCSR_MEMFAULTENA_MskSCB->SHCSR|=SCB_SHCSR_MEMFAULTENA_Msk;#endif__DSB();__ISB();}__STATIC_INLINEvoidARM_MPU_Disable(void){__DMB();#ifdefSCB_SHCSR_MEMFAULTENA_MskSCB->SHCSR&=~SCB_SHCSR_MEMFAULTENA_Msk;#endifMPU->CTRL&=~MPU_CTRL_ENABLE_Msk;}#ifdefMPU_NS__STATIC_INLINEvoidARM_MPU_Enable_NS(uint32_tMPU_Control){MPU_NS->CTRL=MPU_Control|MPU_CTRL_ENABLE_Msk;#ifdefSCB_SHCSR_MEMFAULTENA_MskSCB_NS->SHCSR|=SCB_SHCSR_MEMFAULTENA_Msk;#endif__DSB();__ISB();}__STATIC_INLINEvoidARM_MPU_Disable_NS(void){__DMB();#ifdefSCB_SHCSR_MEMFAULTENA_MskSCB_NS->SHCSR&=~SCB_SHCSR_MEMFAULTENA_Msk;#endifMPU_NS->CTRL&=~MPU_CTRL_ENABLE_Msk;}#endif__STATIC_INLINEvoidARM_MPU_SetMemAttrEx(MPU_Type*mpu,uint8_tidx,uint8_tattr){constuint8_treg=idx/4U;constuint32_tpos=((idx%4U)*8U);constuint32_tmask=0xFFU<<pos;if(reg>=(sizeof(mpu->MAIR)/sizeof(mpu->MAIR[0]))){return;}mpu->MAIR[reg]=((mpu->MAIR[reg]&~mask)|((attr<<pos)&mask));}__STATIC_INLINEvoidARM_MPU_SetMemAttr(uint8_tidx,uint8_tattr){ARM_MPU_SetMemAttrEx(MPU,idx,attr);}#ifdefMPU_NS__STATIC_INLINEvoidARM_MPU_SetMemAttr_NS(uint8_tidx,uint8_tattr){ARM_MPU_SetMemAttrEx(MPU_NS,idx,attr);}#endif__STATIC_INLINEvoidARM_MPU_ClrRegionEx(MPU_Type*mpu,uint32_trnr){mpu->RNR=rnr;mpu->RLAR=0U;}__STATIC_INLINEvoidARM_MPU_ClrRegion(uint32_trnr){ARM_MPU_ClrRegionEx(MPU,rnr);}#ifdefMPU_NS__STATIC_INLINEvoidARM_MPU_ClrRegion_NS(uint32_trnr){ARM_MPU_ClrRegionEx(MPU_NS,rnr);}#endif__STATIC_INLINEvoidARM_MPU_SetRegionEx(MPU_Type*mpu,uint32_trnr,uint32_trbar,uint32_trlar){mpu->RNR=rnr;mpu->RBAR=rbar;mpu->RLAR=rlar;}__STATIC_INLINEvoidARM_MPU_SetRegion(uint32_trnr,uint32_trbar,uint32_trlar){ARM_MPU_SetRegionEx(MPU,rnr,rbar,rlar);}#ifdefMPU_NS__STATIC_INLINEvoidARM_MPU_SetRegion_NS(uint32_trnr,uint32_trbar,uint32_trlar){ARM_MPU_SetRegionEx(MPU_NS,rnr,rbar,rlar);}#endif__STATIC_INLINEvoidARM_MPU_OrderedMemcpy(volatileuint32_t*dst,constuint32_t*__RESTRICTsrc,uint32_tlen){uint32_ti;for(i=0U;i<len;++i){dst[i]=src[i];}}__STATIC_INLINEvoidARM_MPU_LoadEx(MPU_Type*mpu,uint32_trnr,ARM_MPU_Region_tconst*table,uint32_tcnt){constuint32_trowWordSize=sizeof(ARM_MPU_Region_t)/4U;if(cnt==1U){mpu->RNR=rnr;ARM_MPU_OrderedMemcpy(&(mpu->RBAR),&(table->RBAR),rowWordSize);}else{uint32_trnrBase=rnr&~(MPU_TYPE_RALIASES-1U);uint32_trnrOffset=rnr%MPU_TYPE_RALIASES;mpu->RNR=rnrBase;while((rnrOffset+cnt)>MPU_TYPE_RALIASES){uint32_tc=MPU_TYPE_RALIASES-rnrOffset;ARM_MPU_OrderedMemcpy(&(mpu->RBAR)+(rnrOffset*2U),&(table->RBAR),c*rowWordSize);table+=c;cnt-=c;rnrOffset=0U;rnrBase+=MPU_TYPE_RALIASES;mpu->RNR=rnrBase;}ARM_MPU_OrderedMemcpy(&(mpu->RBAR)+(rnrOffset*2U),&(table->RBAR),cnt*rowWordSize);}}__STATIC_INLINEvoidARM_MPU_Load(uint32_trnr,ARM_MPU_Region_tconst*table,uint32_tcnt){ARM_MPU_LoadEx(MPU,rnr,table,cnt);}#ifdefMPU_NS__STATIC_INLINEvoidARM_MPU_Load_NS(uint32_trnr,ARM_MPU_Region_tconst*table,uint32_tcnt){ARM_MPU_LoadEx(MPU_NS,rnr,table,cnt);}#endif#endif