#ifndefSTM32L4xx_LL_CORTEX_H#defineSTM32L4xx_LL_CORTEX_H#ifdef__cplusplusextern"C"{#endif#include"stm32l4xx.h"#defineLL_SYSTICK_CLKSOURCE_HCLK_DIV80x00000000U#defineLL_SYSTICK_CLKSOURCE_HCLKSysTick_CTRL_CLKSOURCE_Msk#defineLL_HANDLER_FAULT_USGSCB_SHCSR_USGFAULTENA_Msk#defineLL_HANDLER_FAULT_BUSSCB_SHCSR_BUSFAULTENA_Msk#defineLL_HANDLER_FAULT_MEMSCB_SHCSR_MEMFAULTENA_Msk#if__MPU_PRESENT#defineLL_MPU_CTRL_HFNMI_PRIVDEF_NONE0x00000000U#defineLL_MPU_CTRL_HARDFAULT_NMIMPU_CTRL_HFNMIENA_Msk#defineLL_MPU_CTRL_PRIVILEGED_DEFAULTMPU_CTRL_PRIVDEFENA_Msk#defineLL_MPU_CTRL_HFNMI_PRIVDEF(MPU_CTRL_HFNMIENA_Msk|MPU_CTRL_PRIVDEFENA_Msk)#defineLL_MPU_REGION_NUMBER00x00U#defineLL_MPU_REGION_NUMBER10x01U#defineLL_MPU_REGION_NUMBER20x02U#defineLL_MPU_REGION_NUMBER30x03U#defineLL_MPU_REGION_NUMBER40x04U#defineLL_MPU_REGION_NUMBER50x05U#defineLL_MPU_REGION_NUMBER60x06U#defineLL_MPU_REGION_NUMBER70x07U#defineLL_MPU_REGION_SIZE_32B(0x04U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_64B(0x05U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_128B(0x06U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_256B(0x07U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_512B(0x08U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_1KB(0x09U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_2KB(0x0AU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_4KB(0x0BU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_8KB(0x0CU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_16KB(0x0DU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_32KB(0x0EU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_64KB(0x0FU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_128KB(0x10U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_256KB(0x11U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_512KB(0x12U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_1MB(0x13U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_2MB(0x14U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_4MB(0x15U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_8MB(0x16U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_16MB(0x17U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_32MB(0x18U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_64MB(0x19U<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_128MB(0x1AU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_256MB(0x1BU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_512MB(0x1CU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_1GB(0x1DU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_2GB(0x1EU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_SIZE_4GB(0x1FU<<MPU_RASR_SIZE_Pos)#defineLL_MPU_REGION_NO_ACCESS(0x00U<<MPU_RASR_AP_Pos)#defineLL_MPU_REGION_PRIV_RW(0x01U<<MPU_RASR_AP_Pos)#defineLL_MPU_REGION_PRIV_RW_URO(0x02U<<MPU_RASR_AP_Pos)#defineLL_MPU_REGION_FULL_ACCESS(0x03U<<MPU_RASR_AP_Pos)#defineLL_MPU_REGION_PRIV_RO(0x05U<<MPU_RASR_AP_Pos)#defineLL_MPU_REGION_PRIV_RO_URO(0x06U<<MPU_RASR_AP_Pos)#defineLL_MPU_TEX_LEVEL0(0x00U<<MPU_RASR_TEX_Pos)#defineLL_MPU_TEX_LEVEL1(0x01U<<MPU_RASR_TEX_Pos)#defineLL_MPU_TEX_LEVEL2(0x02U<<MPU_RASR_TEX_Pos)#defineLL_MPU_TEX_LEVEL4(0x04U<<MPU_RASR_TEX_Pos)#defineLL_MPU_INSTRUCTION_ACCESS_ENABLE0x00U#defineLL_MPU_INSTRUCTION_ACCESS_DISABLEMPU_RASR_XN_Msk#defineLL_MPU_ACCESS_SHAREABLEMPU_RASR_S_Msk#defineLL_MPU_ACCESS_NOT_SHAREABLE0x00U#defineLL_MPU_ACCESS_CACHEABLEMPU_RASR_C_Msk#defineLL_MPU_ACCESS_NOT_CACHEABLE0x00U#defineLL_MPU_ACCESS_BUFFERABLEMPU_RASR_B_Msk#defineLL_MPU_ACCESS_NOT_BUFFERABLE0x00U#endif__STATIC_INLINEuint32_tLL_SYSTICK_IsActiveCounterFlag(void){return((SysTick->CTRL&SysTick_CTRL_COUNTFLAG_Msk)==(SysTick_CTRL_COUNTFLAG_Msk));}__STATIC_INLINEvoidLL_SYSTICK_SetClkSource(uint32_tSource){if(Source==LL_SYSTICK_CLKSOURCE_HCLK){SET_BIT(SysTick->CTRL,LL_SYSTICK_CLKSOURCE_HCLK);}else{CLEAR_BIT(SysTick->CTRL,LL_SYSTICK_CLKSOURCE_HCLK);}}__STATIC_INLINEuint32_tLL_SYSTICK_GetClkSource(void){returnREAD_BIT(SysTick->CTRL,LL_SYSTICK_CLKSOURCE_HCLK);}__STATIC_INLINEvoidLL_SYSTICK_EnableIT(void){SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);}__STATIC_INLINEvoidLL_SYSTICK_DisableIT(void){CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);}__STATIC_INLINEuint32_tLL_SYSTICK_IsEnabledIT(void){return(READ_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk)==(SysTick_CTRL_TICKINT_Msk));}__STATIC_INLINEvoidLL_LPM_EnableSleep(void){CLEAR_BIT(SCB->SCR,((uint32_t)SCB_SCR_SLEEPDEEP_Msk));}__STATIC_INLINEvoidLL_LPM_EnableDeepSleep(void){SET_BIT(SCB->SCR,((uint32_t)SCB_SCR_SLEEPDEEP_Msk));}__STATIC_INLINEvoidLL_LPM_EnableSleepOnExit(void){SET_BIT(SCB->SCR,((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));}__STATIC_INLINEvoidLL_LPM_DisableSleepOnExit(void){CLEAR_BIT(SCB->SCR,((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));}__STATIC_INLINEvoidLL_LPM_EnableEventOnPend(void){SET_BIT(SCB->SCR,((uint32_t)SCB_SCR_SEVONPEND_Msk));}__STATIC_INLINEvoidLL_LPM_DisableEventOnPend(void){CLEAR_BIT(SCB->SCR,((uint32_t)SCB_SCR_SEVONPEND_Msk));}__STATIC_INLINEvoidLL_HANDLER_EnableFault(uint32_tFault){SET_BIT(SCB->SHCSR,Fault);}__STATIC_INLINEvoidLL_HANDLER_DisableFault(uint32_tFault){CLEAR_BIT(SCB->SHCSR,Fault);}__STATIC_INLINEuint32_tLL_CPUID_GetImplementer(void){return(uint32_t)(READ_BIT(SCB->CPUID,SCB_CPUID_IMPLEMENTER_Msk)>>SCB_CPUID_IMPLEMENTER_Pos);}__STATIC_INLINEuint32_tLL_CPUID_GetVariant(void){return(uint32_t)(READ_BIT(SCB->CPUID,SCB_CPUID_VARIANT_Msk)>>SCB_CPUID_VARIANT_Pos);}__STATIC_INLINEuint32_tLL_CPUID_GetConstant(void){return(uint32_t)(READ_BIT(SCB->CPUID,SCB_CPUID_ARCHITECTURE_Msk)>>SCB_CPUID_ARCHITECTURE_Pos);}__STATIC_INLINEuint32_tLL_CPUID_GetParNo(void){return(uint32_t)(READ_BIT(SCB->CPUID,SCB_CPUID_PARTNO_Msk)>>SCB_CPUID_PARTNO_Pos);}__STATIC_INLINEuint32_tLL_CPUID_GetRevision(void){return(uint32_t)(READ_BIT(SCB->CPUID,SCB_CPUID_REVISION_Msk)>>SCB_CPUID_REVISION_Pos);}#if__MPU_PRESENT__STATIC_INLINEvoidLL_MPU_Enable(uint32_tOptions){WRITE_REG(MPU->CTRL,(MPU_CTRL_ENABLE_Msk|Options));__DSB();__ISB();}__STATIC_INLINEvoidLL_MPU_Disable(void){__DMB();WRITE_REG(MPU->CTRL,0U);}__STATIC_INLINEuint32_tLL_MPU_IsEnabled(void){return(READ_BIT(MPU->CTRL,MPU_CTRL_ENABLE_Msk)==(MPU_CTRL_ENABLE_Msk));}__STATIC_INLINEvoidLL_MPU_EnableRegion(uint32_tRegion){WRITE_REG(MPU->RNR,Region);SET_BIT(MPU->RASR,MPU_RASR_ENABLE_Msk);}__STATIC_INLINEvoidLL_MPU_ConfigRegion(uint32_tRegion,uint32_tSubRegionDisable,uint32_tAddress,uint32_tAttributes){WRITE_REG(MPU->RNR,Region);WRITE_REG(MPU->RBAR,(Address&0xFFFFFFE0U));WRITE_REG(MPU->RASR,(MPU_RASR_ENABLE_Msk|Attributes|(SubRegionDisable<<MPU_RASR_SRD_Pos)));}__STATIC_INLINEvoidLL_MPU_DisableRegion(uint32_tRegion){WRITE_REG(MPU->RNR,Region);CLEAR_BIT(MPU->RASR,MPU_RASR_ENABLE_Msk);}#endif#ifdef__cplusplus}#endif#endif