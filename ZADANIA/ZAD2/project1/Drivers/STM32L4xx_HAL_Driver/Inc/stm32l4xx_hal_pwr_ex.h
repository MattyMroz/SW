#ifndefSTM32L4xx_HAL_PWR_EX_H#defineSTM32L4xx_HAL_PWR_EX_H#ifdef__cplusplusextern"C"{#endif#include"stm32l4xx_hal_def.h"typedefstruct{uint32_tPVMType;uint32_tMode;}PWR_PVMTypeDef;#definePWR_WUP_POLARITY_SHIFT0x05#definePWR_WAKEUP_PIN1PWR_CR3_EWUP1#definePWR_WAKEUP_PIN2PWR_CR3_EWUP2#definePWR_WAKEUP_PIN3PWR_CR3_EWUP3#definePWR_WAKEUP_PIN4PWR_CR3_EWUP4#definePWR_WAKEUP_PIN5PWR_CR3_EWUP5#definePWR_WAKEUP_PIN1_HIGHPWR_CR3_EWUP1#definePWR_WAKEUP_PIN2_HIGHPWR_CR3_EWUP2#definePWR_WAKEUP_PIN3_HIGHPWR_CR3_EWUP3#definePWR_WAKEUP_PIN4_HIGHPWR_CR3_EWUP4#definePWR_WAKEUP_PIN5_HIGHPWR_CR3_EWUP5#definePWR_WAKEUP_PIN1_LOW(uint32_t)((PWR_CR4_WP1<<PWR_WUP_POLARITY_SHIFT)|PWR_CR3_EWUP1)#definePWR_WAKEUP_PIN2_LOW(uint32_t)((PWR_CR4_WP2<<PWR_WUP_POLARITY_SHIFT)|PWR_CR3_EWUP2)#definePWR_WAKEUP_PIN3_LOW(uint32_t)((PWR_CR4_WP3<<PWR_WUP_POLARITY_SHIFT)|PWR_CR3_EWUP3)#definePWR_WAKEUP_PIN4_LOW(uint32_t)((PWR_CR4_WP4<<PWR_WUP_POLARITY_SHIFT)|PWR_CR3_EWUP4)#definePWR_WAKEUP_PIN5_LOW(uint32_t)((PWR_CR4_WP5<<PWR_WUP_POLARITY_SHIFT)|PWR_CR3_EWUP5)#ifdefined(PWR_CR2_PVME1)#definePWR_PVM_1PWR_CR2_PVME1#endif#ifdefined(PWR_CR2_PVME2)#definePWR_PVM_2PWR_CR2_PVME2#endif#definePWR_PVM_3PWR_CR2_PVME3#definePWR_PVM_4PWR_CR2_PVME4#definePWR_PVM_MODE_NORMAL((uint32_t)0x00000000)#definePWR_PVM_MODE_IT_RISING((uint32_t)0x00010001)#definePWR_PVM_MODE_IT_FALLING((uint32_t)0x00010002)#definePWR_PVM_MODE_IT_RISING_FALLING((uint32_t)0x00010003)#definePWR_PVM_MODE_EVENT_RISING((uint32_t)0x00020001)#definePWR_PVM_MODE_EVENT_FALLING((uint32_t)0x00020002)#definePWR_PVM_MODE_EVENT_RISING_FALLING((uint32_t)0x00020003)#ifdefined(PWR_CR5_R1MODE)#definePWR_REGULATOR_VOLTAGE_SCALE1_BOOST((uint32_t)0x00000000)#endif#definePWR_REGULATOR_VOLTAGE_SCALE1PWR_CR1_VOS_0#definePWR_REGULATOR_VOLTAGE_SCALE2PWR_CR1_VOS_1#definePWR_BATTERY_CHARGING_RESISTOR_5((uint32_t)0x00000000)#definePWR_BATTERY_CHARGING_RESISTOR_1_5PWR_CR4_VBRS#definePWR_BATTERY_CHARGING_DISABLE((uint32_t)0x00000000)#definePWR_BATTERY_CHARGING_ENABLEPWR_CR4_VBE#definePWR_GPIO_BIT_0PWR_PUCRA_PA0#definePWR_GPIO_BIT_1PWR_PUCRA_PA1#definePWR_GPIO_BIT_2PWR_PUCRA_PA2#definePWR_GPIO_BIT_3PWR_PUCRA_PA3#definePWR_GPIO_BIT_4PWR_PUCRA_PA4#definePWR_GPIO_BIT_5PWR_PUCRA_PA5#definePWR_GPIO_BIT_6PWR_PUCRA_PA6#definePWR_GPIO_BIT_7PWR_PUCRA_PA7#definePWR_GPIO_BIT_8PWR_PUCRA_PA8#definePWR_GPIO_BIT_9PWR_PUCRA_PA9#definePWR_GPIO_BIT_10PWR_PUCRA_PA10#definePWR_GPIO_BIT_11PWR_PUCRA_PA11#definePWR_GPIO_BIT_12PWR_PUCRA_PA12#definePWR_GPIO_BIT_13PWR_PUCRA_PA13#definePWR_GPIO_BIT_14PWR_PDCRA_PA14#definePWR_GPIO_BIT_15PWR_PUCRA_PA15#definePWR_GPIO_A0x00000000U#definePWR_GPIO_B0x00000001U#definePWR_GPIO_C0x00000002U#ifdefined(GPIOD_BASE)#definePWR_GPIO_D0x00000003U#endif#ifdefined(GPIOE_BASE)#definePWR_GPIO_E0x00000004U#endif#ifdefined(GPIOF_BASE)#definePWR_GPIO_F0x00000005U#endif#ifdefined(GPIOG_BASE)#definePWR_GPIO_G0x00000006U#endif#definePWR_GPIO_H0x00000007U#ifdefined(GPIOI_BASE)#definePWR_GPIO_I0x00000008U#endif#ifdefined(PWR_CR2_PVME1)#definePWR_EXTI_LINE_PVM1((uint32_t)0x00000008)#endif#ifdefined(PWR_CR2_PVME2)#definePWR_EXTI_LINE_PVM2((uint32_t)0x00000010)#endif#definePWR_EXTI_LINE_PVM3((uint32_t)0x00000020)#definePWR_EXTI_LINE_PVM4((uint32_t)0x00000040)#ifdefined(PWR_CR2_PVME1)#definePWR_EVENT_LINE_PVM1((uint32_t)0x00000008)#endif#ifdefined(PWR_CR2_PVME2)#definePWR_EVENT_LINE_PVM2((uint32_t)0x00000010)#endif#definePWR_EVENT_LINE_PVM3((uint32_t)0x00000020)#definePWR_EVENT_LINE_PVM4((uint32_t)0x00000040)#definePWR_FLAG_WUF1((uint32_t)0x0020)#definePWR_FLAG_WUF2((uint32_t)0x0021)#definePWR_FLAG_WUF3((uint32_t)0x0022)#definePWR_FLAG_WUF4((uint32_t)0x0023)#definePWR_FLAG_WUF5((uint32_t)0x0024)#definePWR_FLAG_WUPWR_SR1_WUF#definePWR_FLAG_SB((uint32_t)0x0028)#ifdefined(PWR_SR1_EXT_SMPS_RDY)#definePWR_FLAG_EXT_SMPS((uint32_t)0x002D)#endif#definePWR_FLAG_WUFI((uint32_t)0x002F)#definePWR_FLAG_REGLPS((uint32_t)0x0048)#definePWR_FLAG_REGLPF((uint32_t)0x0049)#definePWR_FLAG_VOSF((uint32_t)0x004A)#definePWR_FLAG_PVDO((uint32_t)0x004B)#ifdefined(PWR_CR2_PVME1)#definePWR_FLAG_PVMO1((uint32_t)0x004C)#endif#ifdefined(PWR_CR2_PVME2)#definePWR_FLAG_PVMO2((uint32_t)0x004D)#endif#definePWR_FLAG_PVMO3((uint32_t)0x004E)#definePWR_FLAG_PVMO4((uint32_t)0x004F)#definePWR_NO_SRAM2_RETENTION((uint32_t)0x00000000)#ifdefined(PWR_CR3_RRS_1)#definePWR_FULL_SRAM2_RETENTIONPWR_CR3_RRS_0#definePWR_4KBYTES_SRAM2_RETENTIONPWR_CR3_RRS_1#else#definePWR_FULL_SRAM2_RETENTIONPWR_CR3_RRS#endif#ifdefined(PWR_CR2_PVME1)#define__HAL_PWR_PVM1_EXTI_ENABLE_IT()SET_BIT(EXTI->IMR2,PWR_EXTI_LINE_PVM1)#define__HAL_PWR_PVM1_EXTI_DISABLE_IT()CLEAR_BIT(EXTI->IMR2,PWR_EXTI_LINE_PVM1)#define__HAL_PWR_PVM1_EXTI_ENABLE_EVENT()SET_BIT(EXTI->EMR2,PWR_EVENT_LINE_PVM1)#define__HAL_PWR_PVM1_EXTI_DISABLE_EVENT()CLEAR_BIT(EXTI->EMR2,PWR_EVENT_LINE_PVM1)#define__HAL_PWR_PVM1_EXTI_ENABLE_RISING_EDGE()SET_BIT(EXTI->RTSR2,PWR_EXTI_LINE_PVM1)#define__HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE()CLEAR_BIT(EXTI->RTSR2,PWR_EXTI_LINE_PVM1)#define__HAL_PWR_PVM1_EXTI_ENABLE_FALLING_EDGE()SET_BIT(EXTI->FTSR2,PWR_EXTI_LINE_PVM1)#define__HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE()CLEAR_BIT(EXTI->FTSR2,PWR_EXTI_LINE_PVM1)#define__HAL_PWR_PVM1_EXTI_ENABLE_RISING_FALLING_EDGE()\do{\__HAL_PWR_PVM1_EXTI_ENABLE_RISING_EDGE();\__HAL_PWR_PVM1_EXTI_ENABLE_FALLING_EDGE();\}while(0)#define__HAL_PWR_PVM1_EXTI_DISABLE_RISING_FALLING_EDGE()\do{\__HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();\__HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE();\}while(0)#define__HAL_PWR_PVM1_EXTI_GENERATE_SWIT()SET_BIT(EXTI->SWIER2,PWR_EXTI_LINE_PVM1)#define__HAL_PWR_PVM1_EXTI_GET_FLAG()(EXTI->PR2&PWR_EXTI_LINE_PVM1)#define__HAL_PWR_PVM1_EXTI_CLEAR_FLAG()WRITE_REG(EXTI->PR2,PWR_EXTI_LINE_PVM1)#endif#ifdefined(PWR_CR2_PVME2)#define__HAL_PWR_PVM2_EXTI_ENABLE_IT()SET_BIT(EXTI->IMR2,PWR_EXTI_LINE_PVM2)#define__HAL_PWR_PVM2_EXTI_DISABLE_IT()CLEAR_BIT(EXTI->IMR2,PWR_EXTI_LINE_PVM2)#define__HAL_PWR_PVM2_EXTI_ENABLE_EVENT()SET_BIT(EXTI->EMR2,PWR_EVENT_LINE_PVM2)#define__HAL_PWR_PVM2_EXTI_DISABLE_EVENT()CLEAR_BIT(EXTI->EMR2,PWR_EVENT_LINE_PVM2)#define__HAL_PWR_PVM2_EXTI_ENABLE_RISING_EDGE()SET_BIT(EXTI->RTSR2,PWR_EXTI_LINE_PVM2)#define__HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE()CLEAR_BIT(EXTI->RTSR2,PWR_EXTI_LINE_PVM2)#define__HAL_PWR_PVM2_EXTI_ENABLE_FALLING_EDGE()SET_BIT(EXTI->FTSR2,PWR_EXTI_LINE_PVM2)#define__HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE()CLEAR_BIT(EXTI->FTSR2,PWR_EXTI_LINE_PVM2)#define__HAL_PWR_PVM2_EXTI_ENABLE_RISING_FALLING_EDGE()\do{\__HAL_PWR_PVM2_EXTI_ENABLE_RISING_EDGE();\__HAL_PWR_PVM2_EXTI_ENABLE_FALLING_EDGE();\}while(0)#define__HAL_PWR_PVM2_EXTI_DISABLE_RISING_FALLING_EDGE()\do{\__HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();\__HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE();\}while(0)#define__HAL_PWR_PVM2_EXTI_GENERATE_SWIT()SET_BIT(EXTI->SWIER2,PWR_EXTI_LINE_PVM2)#define__HAL_PWR_PVM2_EXTI_GET_FLAG()(EXTI->PR2&PWR_EXTI_LINE_PVM2)#define__HAL_PWR_PVM2_EXTI_CLEAR_FLAG()WRITE_REG(EXTI->PR2,PWR_EXTI_LINE_PVM2)#endif#define__HAL_PWR_PVM3_EXTI_ENABLE_IT()SET_BIT(EXTI->IMR2,PWR_EXTI_LINE_PVM3)#define__HAL_PWR_PVM3_EXTI_DISABLE_IT()CLEAR_BIT(EXTI->IMR2,PWR_EXTI_LINE_PVM3)#define__HAL_PWR_PVM3_EXTI_ENABLE_EVENT()SET_BIT(EXTI->EMR2,PWR_EVENT_LINE_PVM3)#define__HAL_PWR_PVM3_EXTI_DISABLE_EVENT()CLEAR_BIT(EXTI->EMR2,PWR_EVENT_LINE_PVM3)#define__HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE()SET_BIT(EXTI->RTSR2,PWR_EXTI_LINE_PVM3)#define__HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE()CLEAR_BIT(EXTI->RTSR2,PWR_EXTI_LINE_PVM3)#define__HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE()SET_BIT(EXTI->FTSR2,PWR_EXTI_LINE_PVM3)#define__HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE()CLEAR_BIT(EXTI->FTSR2,PWR_EXTI_LINE_PVM3)#define__HAL_PWR_PVM3_EXTI_ENABLE_RISING_FALLING_EDGE()\do{\__HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE();\__HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE();\}while(0)#define__HAL_PWR_PVM3_EXTI_DISABLE_RISING_FALLING_EDGE()\do{\__HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();\__HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE();\}while(0)#define__HAL_PWR_PVM3_EXTI_GENERATE_SWIT()SET_BIT(EXTI->SWIER2,PWR_EXTI_LINE_PVM3)#define__HAL_PWR_PVM3_EXTI_GET_FLAG()(EXTI->PR2&PWR_EXTI_LINE_PVM3)#define__HAL_PWR_PVM3_EXTI_CLEAR_FLAG()WRITE_REG(EXTI->PR2,PWR_EXTI_LINE_PVM3)#define__HAL_PWR_PVM4_EXTI_ENABLE_IT()SET_BIT(EXTI->IMR2,PWR_EXTI_LINE_PVM4)#define__HAL_PWR_PVM4_EXTI_DISABLE_IT()CLEAR_BIT(EXTI->IMR2,PWR_EXTI_LINE_PVM4)#define__HAL_PWR_PVM4_EXTI_ENABLE_EVENT()SET_BIT(EXTI->EMR2,PWR_EVENT_LINE_PVM4)#define__HAL_PWR_PVM4_EXTI_DISABLE_EVENT()CLEAR_BIT(EXTI->EMR2,PWR_EVENT_LINE_PVM4)#define__HAL_PWR_PVM4_EXTI_ENABLE_RISING_EDGE()SET_BIT(EXTI->RTSR2,PWR_EXTI_LINE_PVM4)#define__HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE()CLEAR_BIT(EXTI->RTSR2,PWR_EXTI_LINE_PVM4)#define__HAL_PWR_PVM4_EXTI_ENABLE_FALLING_EDGE()SET_BIT(EXTI->FTSR2,PWR_EXTI_LINE_PVM4)#define__HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE()CLEAR_BIT(EXTI->FTSR2,PWR_EXTI_LINE_PVM4)#define__HAL_PWR_PVM4_EXTI_ENABLE_RISING_FALLING_EDGE()\do{\__HAL_PWR_PVM4_EXTI_ENABLE_RISING_EDGE();\__HAL_PWR_PVM4_EXTI_ENABLE_FALLING_EDGE();\}while(0)#define__HAL_PWR_PVM4_EXTI_DISABLE_RISING_FALLING_EDGE()\do{\__HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();\__HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE();\}while(0)#define__HAL_PWR_PVM4_EXTI_GENERATE_SWIT()SET_BIT(EXTI->SWIER2,PWR_EXTI_LINE_PVM4)#define__HAL_PWR_PVM4_EXTI_GET_FLAG()(EXTI->PR2&PWR_EXTI_LINE_PVM4)#define__HAL_PWR_PVM4_EXTI_CLEAR_FLAG()WRITE_REG(EXTI->PR2,PWR_EXTI_LINE_PVM4)#define__HAL_PWR_VOLTAGESCALING_CONFIG(__REGULATOR__)do{\__IOuint32_ttmpreg;\MODIFY_REG(PWR->CR1,PWR_CR1_VOS,(__REGULATOR__));\\tmpreg=READ_BIT(PWR->CR1,PWR_CR1_VOS);\UNUSED(tmpreg);\}while(0)#defineIS_PWR_WAKEUP_PIN(PIN)(((PIN)==PWR_WAKEUP_PIN1)||\((PIN)==PWR_WAKEUP_PIN2)||\((PIN)==PWR_WAKEUP_PIN3)||\((PIN)==PWR_WAKEUP_PIN4)||\((PIN)==PWR_WAKEUP_PIN5)||\((PIN)==PWR_WAKEUP_PIN1_HIGH)||\((PIN)==PWR_WAKEUP_PIN2_HIGH)||\((PIN)==PWR_WAKEUP_PIN3_HIGH)||\((PIN)==PWR_WAKEUP_PIN4_HIGH)||\((PIN)==PWR_WAKEUP_PIN5_HIGH)||\((PIN)==PWR_WAKEUP_PIN1_LOW)||\((PIN)==PWR_WAKEUP_PIN2_LOW)||\((PIN)==PWR_WAKEUP_PIN3_LOW)||\((PIN)==PWR_WAKEUP_PIN4_LOW)||\((PIN)==PWR_WAKEUP_PIN5_LOW))#ifdefined(STM32L475xx)||defined(STM32L476xx)||defined(STM32L485xx)||defined(STM32L486xx)||\defined(STM32L496xx)||defined(STM32L4A6xx)||\defined(STM32L4P5xx)||defined(STM32L4Q5xx)||\defined(STM32L4R5xx)||defined(STM32L4R7xx)||defined(STM32L4R9xx)||defined(STM32L4S5xx)||defined(STM32L4S7xx)||defined(STM32L4S9xx)#defineIS_PWR_PVM_TYPE(TYPE)(((TYPE)==PWR_PVM_1)||\((TYPE)==PWR_PVM_2)||\((TYPE)==PWR_PVM_3)||\((TYPE)==PWR_PVM_4))#elifdefined(STM32L471xx)#defineIS_PWR_PVM_TYPE(TYPE)(((TYPE)==PWR_PVM_2)||\((TYPE)==PWR_PVM_3)||\((TYPE)==PWR_PVM_4))#endif#ifdefined(STM32L412xx)||defined(STM32L422xx)||defined(STM32L433xx)||defined(STM32L443xx)||defined(STM32L452xx)||defined(STM32L462xx)#defineIS_PWR_PVM_TYPE(TYPE)(((TYPE)==PWR_PVM_1)||\((TYPE)==PWR_PVM_3)||\((TYPE)==PWR_PVM_4))#elifdefined(STM32L431xx)||defined(STM32L432xx)||defined(STM32L442xx)||defined(STM32L451xx)#defineIS_PWR_PVM_TYPE(TYPE)(((TYPE)==PWR_PVM_3)||\((TYPE)==PWR_PVM_4))#endif#defineIS_PWR_PVM_MODE(MODE)(((MODE)==PWR_PVM_MODE_NORMAL)||\((MODE)==PWR_PVM_MODE_IT_RISING)||\((MODE)==PWR_PVM_MODE_IT_FALLING)||\((MODE)==PWR_PVM_MODE_IT_RISING_FALLING)||\((MODE)==PWR_PVM_MODE_EVENT_RISING)||\((MODE)==PWR_PVM_MODE_EVENT_FALLING)||\((MODE)==PWR_PVM_MODE_EVENT_RISING_FALLING))#ifdefined(PWR_CR5_R1MODE)#defineIS_PWR_VOLTAGE_SCALING_RANGE(RANGE)(((RANGE)==PWR_REGULATOR_VOLTAGE_SCALE1_BOOST)||\((RANGE)==PWR_REGULATOR_VOLTAGE_SCALE1)||\((RANGE)==PWR_REGULATOR_VOLTAGE_SCALE2))#else#defineIS_PWR_VOLTAGE_SCALING_RANGE(RANGE)(((RANGE)==PWR_REGULATOR_VOLTAGE_SCALE1)||\((RANGE)==PWR_REGULATOR_VOLTAGE_SCALE2))#endif#defineIS_PWR_BATTERY_RESISTOR_SELECT(RESISTOR)(((RESISTOR)==PWR_BATTERY_CHARGING_RESISTOR_5)||\((RESISTOR)==PWR_BATTERY_CHARGING_RESISTOR_1_5))#defineIS_PWR_BATTERY_CHARGING(CHARGING)(((CHARGING)==PWR_BATTERY_CHARGING_DISABLE)||\((CHARGING)==PWR_BATTERY_CHARGING_ENABLE))#defineIS_PWR_GPIO_BIT_NUMBER(BIT_NUMBER)(((BIT_NUMBER)&GPIO_PIN_MASK)!=(uint32_t)0x00)#ifdefined(STM32L412xx)||defined(STM32L422xx)#defineIS_PWR_GPIO(GPIO)(((GPIO)==PWR_GPIO_A)||\((GPIO)==PWR_GPIO_B)||\((GPIO)==PWR_GPIO_C)||\((GPIO)==PWR_GPIO_D)||\((GPIO)==PWR_GPIO_H))#elifdefined(STM32L431xx)||defined(STM32L433xx)||defined(STM32L443xx)||\defined(STM32L451xx)||defined(STM32L452xx)||defined(STM32L462xx)#defineIS_PWR_GPIO(GPIO)(((GPIO)==PWR_GPIO_A)||\((GPIO)==PWR_GPIO_B)||\((GPIO)==PWR_GPIO_C)||\((GPIO)==PWR_GPIO_D)||\((GPIO)==PWR_GPIO_E)||\((GPIO)==PWR_GPIO_H))#elifdefined(STM32L432xx)||defined(STM32L442xx)#defineIS_PWR_GPIO(GPIO)(((GPIO)==PWR_GPIO_A)||\((GPIO)==PWR_GPIO_B)||\((GPIO)==PWR_GPIO_C)||\((GPIO)==PWR_GPIO_H))#elifdefined(STM32L471xx)||defined(STM32L475xx)||defined(STM32L476xx)||defined(STM32L485xx)||defined(STM32L486xx)#defineIS_PWR_GPIO(GPIO)(((GPIO)==PWR_GPIO_A)||\((GPIO)==PWR_GPIO_B)||\((GPIO)==PWR_GPIO_C)||\((GPIO)==PWR_GPIO_D)||\((GPIO)==PWR_GPIO_E)||\((GPIO)==PWR_GPIO_F)||\((GPIO)==PWR_GPIO_G)||\((GPIO)==PWR_GPIO_H))#elifdefined(STM32L496xx)||defined(STM32L4A6xx)||\defined(STM32L4P5xx)||defined(STM32L4Q5xx)||\defined(STM32L4R5xx)||defined(STM32L4R7xx)||defined(STM32L4R9xx)||defined(STM32L4S5xx)||defined(STM32L4S7xx)||defined(STM32L4S9xx)#defineIS_PWR_GPIO(GPIO)(((GPIO)==PWR_GPIO_A)||\((GPIO)==PWR_GPIO_B)||\((GPIO)==PWR_GPIO_C)||\((GPIO)==PWR_GPIO_D)||\((GPIO)==PWR_GPIO_E)||\((GPIO)==PWR_GPIO_F)||\((GPIO)==PWR_GPIO_G)||\((GPIO)==PWR_GPIO_H)||\((GPIO)==PWR_GPIO_I))#endif#ifdefined(STM32L4P5xx)||defined(STM32L4Q5xx)#defineIS_PWR_SRAM2_RETENTION(SRAM2)(((SRAM2)==PWR_NO_SRAM2_RETENTION)||\((SRAM2)==PWR_FULL_SRAM2_RETENTION)||\((SRAM2)==PWR_4KBYTES_SRAM2_RETENTION))#else#defineIS_PWR_SRAM2_RETENTION(SRAM2)(((SRAM2)==PWR_NO_SRAM2_RETENTION)||\((SRAM2)==PWR_FULL_SRAM2_RETENTION))#endifuint32_tHAL_PWREx_GetVoltageRange(void);HAL_StatusTypeDefHAL_PWREx_ControlVoltageScaling(uint32_tVoltageScaling);voidHAL_PWREx_EnableBatteryCharging(uint32_tResistorSelection);voidHAL_PWREx_DisableBatteryCharging(void);#ifdefined(PWR_CR2_USV)voidHAL_PWREx_EnableVddUSB(void);voidHAL_PWREx_DisableVddUSB(void);#endif#ifdefined(PWR_CR2_IOSV)voidHAL_PWREx_EnableVddIO2(void);voidHAL_PWREx_DisableVddIO2(void);#endifvoidHAL_PWREx_EnableInternalWakeUpLine(void);voidHAL_PWREx_DisableInternalWakeUpLine(void);HAL_StatusTypeDefHAL_PWREx_EnableGPIOPullUp(uint32_tGPIO,uint32_tGPIONumber);HAL_StatusTypeDefHAL_PWREx_DisableGPIOPullUp(uint32_tGPIO,uint32_tGPIONumber);HAL_StatusTypeDefHAL_PWREx_EnableGPIOPullDown(uint32_tGPIO,uint32_tGPIONumber);HAL_StatusTypeDefHAL_PWREx_DisableGPIOPullDown(uint32_tGPIO,uint32_tGPIONumber);voidHAL_PWREx_EnablePullUpPullDownConfig(void);voidHAL_PWREx_DisablePullUpPullDownConfig(void);voidHAL_PWREx_EnableSRAM2ContentRetention(void);voidHAL_PWREx_DisableSRAM2ContentRetention(void);HAL_StatusTypeDefHAL_PWREx_SetSRAM2ContentRetention(uint32_tSRAM2Size);#ifdefined(PWR_CR1_RRSTP)voidHAL_PWREx_EnableSRAM3ContentRetention(void);voidHAL_PWREx_DisableSRAM3ContentRetention(void);#endif#ifdefined(PWR_CR3_DSIPDEN)voidHAL_PWREx_EnableDSIPinsPDActivation(void);voidHAL_PWREx_DisableDSIPinsPDActivation(void);#endif#ifdefined(PWR_CR2_PVME1)voidHAL_PWREx_EnablePVM1(void);voidHAL_PWREx_DisablePVM1(void);#endif#ifdefined(PWR_CR2_PVME2)voidHAL_PWREx_EnablePVM2(void);voidHAL_PWREx_DisablePVM2(void);#endifvoidHAL_PWREx_EnablePVM3(void);voidHAL_PWREx_DisablePVM3(void);voidHAL_PWREx_EnablePVM4(void);voidHAL_PWREx_DisablePVM4(void);HAL_StatusTypeDefHAL_PWREx_ConfigPVM(PWR_PVMTypeDef*sConfigPVM);#ifdefined(PWR_CR3_ENULP)voidHAL_PWREx_EnableBORPVD_ULP(void);voidHAL_PWREx_DisableBORPVD_ULP(void);#endif#ifdefined(PWR_CR4_EXT_SMPS_ON)voidHAL_PWREx_EnableExtSMPS_0V95(void);voidHAL_PWREx_DisableExtSMPS_0V95(void);#endifvoidHAL_PWREx_EnableLowPowerRunMode(void);HAL_StatusTypeDefHAL_PWREx_DisableLowPowerRunMode(void);voidHAL_PWREx_EnterSTOP0Mode(uint8_tSTOPEntry);voidHAL_PWREx_EnterSTOP1Mode(uint8_tSTOPEntry);voidHAL_PWREx_EnterSTOP2Mode(uint8_tSTOPEntry);voidHAL_PWREx_EnterSHUTDOWNMode(void);voidHAL_PWREx_PVD_PVM_IRQHandler(void);#ifdefined(PWR_CR2_PVME1)voidHAL_PWREx_PVM1Callback(void);#endif#ifdefined(PWR_CR2_PVME2)voidHAL_PWREx_PVM2Callback(void);#endifvoidHAL_PWREx_PVM3Callback(void);voidHAL_PWREx_PVM4Callback(void);#ifdef__cplusplus}#endif#endif