#ifndefSTM32L4xx_LL_GPIO_H#defineSTM32L4xx_LL_GPIO_H#ifdef__cplusplusextern"C"{#endif#include"stm32l4xx.h"#ifdefined(GPIOA)||defined(GPIOB)||defined(GPIOC)||defined(GPIOD)||defined(GPIOE)||defined(GPIOF)||defined(GPIOG)||defined(GPIOH)||defined(GPIOI)#ifdefined(USE_FULL_LL_DRIVER)#endif#ifdefined(USE_FULL_LL_DRIVER)typedefstruct{uint32_tPin;uint32_tMode;uint32_tSpeed;uint32_tOutputType;uint32_tPull;uint32_tAlternate;}LL_GPIO_InitTypeDef;#endif#defineLL_GPIO_PIN_0GPIO_BSRR_BS0#defineLL_GPIO_PIN_1GPIO_BSRR_BS1#defineLL_GPIO_PIN_2GPIO_BSRR_BS2#defineLL_GPIO_PIN_3GPIO_BSRR_BS3#defineLL_GPIO_PIN_4GPIO_BSRR_BS4#defineLL_GPIO_PIN_5GPIO_BSRR_BS5#defineLL_GPIO_PIN_6GPIO_BSRR_BS6#defineLL_GPIO_PIN_7GPIO_BSRR_BS7#defineLL_GPIO_PIN_8GPIO_BSRR_BS8#defineLL_GPIO_PIN_9GPIO_BSRR_BS9#defineLL_GPIO_PIN_10GPIO_BSRR_BS10#defineLL_GPIO_PIN_11GPIO_BSRR_BS11#defineLL_GPIO_PIN_12GPIO_BSRR_BS12#defineLL_GPIO_PIN_13GPIO_BSRR_BS13#defineLL_GPIO_PIN_14GPIO_BSRR_BS14#defineLL_GPIO_PIN_15GPIO_BSRR_BS15#defineLL_GPIO_PIN_ALL(GPIO_BSRR_BS0|GPIO_BSRR_BS1|GPIO_BSRR_BS2|\GPIO_BSRR_BS3|GPIO_BSRR_BS4|GPIO_BSRR_BS5|\GPIO_BSRR_BS6|GPIO_BSRR_BS7|GPIO_BSRR_BS8|\GPIO_BSRR_BS9|GPIO_BSRR_BS10|GPIO_BSRR_BS11|\GPIO_BSRR_BS12|GPIO_BSRR_BS13|GPIO_BSRR_BS14|\GPIO_BSRR_BS15)#defineLL_GPIO_MODE_INPUT(0x00000000U)#defineLL_GPIO_MODE_OUTPUTGPIO_MODER_MODE0_0#defineLL_GPIO_MODE_ALTERNATEGPIO_MODER_MODE0_1#defineLL_GPIO_MODE_ANALOGGPIO_MODER_MODE0#defineLL_GPIO_OUTPUT_PUSHPULL(0x00000000U)#defineLL_GPIO_OUTPUT_OPENDRAINGPIO_OTYPER_OT0#defineLL_GPIO_SPEED_FREQ_LOW(0x00000000U)#defineLL_GPIO_SPEED_FREQ_MEDIUMGPIO_OSPEEDR_OSPEED0_0#defineLL_GPIO_SPEED_FREQ_HIGHGPIO_OSPEEDR_OSPEED0_1#defineLL_GPIO_SPEED_FREQ_VERY_HIGHGPIO_OSPEEDR_OSPEED0#defineLL_GPIO_SPEED_LOWLL_GPIO_SPEED_FREQ_LOW#defineLL_GPIO_SPEED_MEDIUMLL_GPIO_SPEED_FREQ_MEDIUM#defineLL_GPIO_SPEED_FASTLL_GPIO_SPEED_FREQ_HIGH#defineLL_GPIO_SPEED_HIGHLL_GPIO_SPEED_FREQ_VERY_HIGH#defineLL_GPIO_PULL_NO(0x00000000U)#defineLL_GPIO_PULL_UPGPIO_PUPDR_PUPD0_0#defineLL_GPIO_PULL_DOWNGPIO_PUPDR_PUPD0_1#defineLL_GPIO_AF_0(0x0000000U)#defineLL_GPIO_AF_1(0x0000001U)#defineLL_GPIO_AF_2(0x0000002U)#defineLL_GPIO_AF_3(0x0000003U)#defineLL_GPIO_AF_4(0x0000004U)#defineLL_GPIO_AF_5(0x0000005U)#defineLL_GPIO_AF_6(0x0000006U)#defineLL_GPIO_AF_7(0x0000007U)#defineLL_GPIO_AF_8(0x0000008U)#defineLL_GPIO_AF_9(0x0000009U)#defineLL_GPIO_AF_10(0x000000AU)#defineLL_GPIO_AF_11(0x000000BU)#defineLL_GPIO_AF_12(0x000000CU)#defineLL_GPIO_AF_13(0x000000DU)#defineLL_GPIO_AF_14(0x000000EU)#defineLL_GPIO_AF_15(0x000000FU)#defineLL_GPIO_WriteReg(__INSTANCE__,__REG__,__VALUE__)WRITE_REG(__INSTANCE__->__REG__,(__VALUE__))#defineLL_GPIO_ReadReg(__INSTANCE__,__REG__)READ_REG(__INSTANCE__->__REG__)__STATIC_INLINEvoidLL_GPIO_SetPinMode(GPIO_TypeDef*GPIOx,uint32_tPin,uint32_tMode){MODIFY_REG(GPIOx->MODER,(GPIO_MODER_MODE0<<(POSITION_VAL(Pin)*2U)),(Mode<<(POSITION_VAL(Pin)*2U)));}__STATIC_INLINEuint32_tLL_GPIO_GetPinMode(GPIO_TypeDef*GPIOx,uint32_tPin){return(uint32_t)(READ_BIT(GPIOx->MODER,(GPIO_MODER_MODE0<<(POSITION_VAL(Pin)*2U)))>>(POSITION_VAL(Pin)*2U));}__STATIC_INLINEvoidLL_GPIO_SetPinOutputType(GPIO_TypeDef*GPIOx,uint32_tPinMask,uint32_tOutputType){MODIFY_REG(GPIOx->OTYPER,PinMask,(PinMask*OutputType));}__STATIC_INLINEuint32_tLL_GPIO_GetPinOutputType(GPIO_TypeDef*GPIOx,uint32_tPin){return(uint32_t)(READ_BIT(GPIOx->OTYPER,Pin)>>POSITION_VAL(Pin));}__STATIC_INLINEvoidLL_GPIO_SetPinSpeed(GPIO_TypeDef*GPIOx,uint32_tPin,uint32_tSpeed){MODIFY_REG(GPIOx->OSPEEDR,(GPIO_OSPEEDR_OSPEED0<<(POSITION_VAL(Pin)*2U)),(Speed<<(POSITION_VAL(Pin)*2U)));}__STATIC_INLINEuint32_tLL_GPIO_GetPinSpeed(GPIO_TypeDef*GPIOx,uint32_tPin){return(uint32_t)(READ_BIT(GPIOx->OSPEEDR,(GPIO_OSPEEDR_OSPEED0<<(POSITION_VAL(Pin)*2U)))>>(POSITION_VAL(Pin)*2U));}__STATIC_INLINEvoidLL_GPIO_SetPinPull(GPIO_TypeDef*GPIOx,uint32_tPin,uint32_tPull){MODIFY_REG(GPIOx->PUPDR,(GPIO_PUPDR_PUPD0<<(POSITION_VAL(Pin)*2U)),(Pull<<(POSITION_VAL(Pin)*2U)));}__STATIC_INLINEuint32_tLL_GPIO_GetPinPull(GPIO_TypeDef*GPIOx,uint32_tPin){return(uint32_t)(READ_BIT(GPIOx->PUPDR,(GPIO_PUPDR_PUPD0<<(POSITION_VAL(Pin)*2U)))>>(POSITION_VAL(Pin)*2U));}__STATIC_INLINEvoidLL_GPIO_SetAFPin_0_7(GPIO_TypeDef*GPIOx,uint32_tPin,uint32_tAlternate){MODIFY_REG(GPIOx->AFR[0],(GPIO_AFRL_AFSEL0<<(POSITION_VAL(Pin)*4U)),(Alternate<<(POSITION_VAL(Pin)*4U)));}__STATIC_INLINEuint32_tLL_GPIO_GetAFPin_0_7(GPIO_TypeDef*GPIOx,uint32_tPin){return(uint32_t)(READ_BIT(GPIOx->AFR[0],(GPIO_AFRL_AFSEL0<<(POSITION_VAL(Pin)*4U)))>>(POSITION_VAL(Pin)*4U));}__STATIC_INLINEvoidLL_GPIO_SetAFPin_8_15(GPIO_TypeDef*GPIOx,uint32_tPin,uint32_tAlternate){MODIFY_REG(GPIOx->AFR[1],(GPIO_AFRH_AFSEL8<<(POSITION_VAL(Pin>>8U)*4U)),(Alternate<<(POSITION_VAL(Pin>>8U)*4U)));}__STATIC_INLINEuint32_tLL_GPIO_GetAFPin_8_15(GPIO_TypeDef*GPIOx,uint32_tPin){return(uint32_t)(READ_BIT(GPIOx->AFR[1],(GPIO_AFRH_AFSEL8<<(POSITION_VAL(Pin>>8U)*4U)))>>(POSITION_VAL(Pin>>8U)*4U));}#ifdefined(GPIO_ASCR_ASC0)__STATIC_INLINEvoidLL_GPIO_EnablePinAnalogControl(GPIO_TypeDef*GPIOx,uint32_tPinMask){SET_BIT(GPIOx->ASCR,PinMask);}__STATIC_INLINEvoidLL_GPIO_DisablePinAnalogControl(GPIO_TypeDef*GPIOx,uint32_tPinMask){CLEAR_BIT(GPIOx->ASCR,PinMask);}#endif__STATIC_INLINEvoidLL_GPIO_LockPin(GPIO_TypeDef*GPIOx,uint32_tPinMask){__IOuint32_ttemp;WRITE_REG(GPIOx->LCKR,GPIO_LCKR_LCKK|PinMask);WRITE_REG(GPIOx->LCKR,PinMask);WRITE_REG(GPIOx->LCKR,GPIO_LCKR_LCKK|PinMask);temp=READ_REG(GPIOx->LCKR);(void)temp;}__STATIC_INLINEuint32_tLL_GPIO_IsPinLocked(GPIO_TypeDef*GPIOx,uint32_tPinMask){return((READ_BIT(GPIOx->LCKR,PinMask)==(PinMask))?1UL:0UL);}__STATIC_INLINEuint32_tLL_GPIO_IsAnyPinLocked(GPIO_TypeDef*GPIOx){return((READ_BIT(GPIOx->LCKR,GPIO_LCKR_LCKK)==(GPIO_LCKR_LCKK))?1UL:0UL);}__STATIC_INLINEuint32_tLL_GPIO_ReadInputPort(GPIO_TypeDef*GPIOx){return(uint32_t)(READ_REG(GPIOx->IDR));}__STATIC_INLINEuint32_tLL_GPIO_IsInputPinSet(GPIO_TypeDef*GPIOx,uint32_tPinMask){return((READ_BIT(GPIOx->IDR,PinMask)==(PinMask))?1UL:0UL);}__STATIC_INLINEvoidLL_GPIO_WriteOutputPort(GPIO_TypeDef*GPIOx,uint32_tPortValue){WRITE_REG(GPIOx->ODR,PortValue);}__STATIC_INLINEuint32_tLL_GPIO_ReadOutputPort(GPIO_TypeDef*GPIOx){return(uint32_t)(READ_REG(GPIOx->ODR));}__STATIC_INLINEuint32_tLL_GPIO_IsOutputPinSet(GPIO_TypeDef*GPIOx,uint32_tPinMask){return((READ_BIT(GPIOx->ODR,PinMask)==(PinMask))?1UL:0UL);}__STATIC_INLINEvoidLL_GPIO_SetOutputPin(GPIO_TypeDef*GPIOx,uint32_tPinMask){WRITE_REG(GPIOx->BSRR,PinMask);}__STATIC_INLINEvoidLL_GPIO_ResetOutputPin(GPIO_TypeDef*GPIOx,uint32_tPinMask){WRITE_REG(GPIOx->BRR,PinMask);}__STATIC_INLINEvoidLL_GPIO_TogglePin(GPIO_TypeDef*GPIOx,uint32_tPinMask){uint32_todr=READ_REG(GPIOx->ODR);WRITE_REG(GPIOx->BSRR,((odr&PinMask)<<16u)|(~odr&PinMask));}#ifdefined(USE_FULL_LL_DRIVER)ErrorStatusLL_GPIO_DeInit(GPIO_TypeDef*GPIOx);ErrorStatusLL_GPIO_Init(GPIO_TypeDef*GPIOx,LL_GPIO_InitTypeDef*GPIO_InitStruct);voidLL_GPIO_StructInit(LL_GPIO_InitTypeDef*GPIO_InitStruct);#endif#endif#ifdef__cplusplus}#endif#endif