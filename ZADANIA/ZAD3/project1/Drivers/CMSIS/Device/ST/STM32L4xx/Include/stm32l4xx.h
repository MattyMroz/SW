#ifndef__STM32L4xx_H#define__STM32L4xx_H#ifdef__cplusplusextern"C"{#endif#if!defined(STM32L4)#defineSTM32L4#endif#if!defined(STM32L412xx)&&!defined(STM32L422xx)&&\!defined(STM32L431xx)&&!defined(STM32L432xx)&&!defined(STM32L433xx)&&!defined(STM32L442xx)&&!defined(STM32L443xx)&&\!defined(STM32L451xx)&&!defined(STM32L452xx)&&!defined(STM32L462xx)&&\!defined(STM32L471xx)&&!defined(STM32L475xx)&&!defined(STM32L476xx)&&!defined(STM32L485xx)&&!defined(STM32L486xx)&&\!defined(STM32L496xx)&&!defined(STM32L4A6xx)&&\!defined(STM32L4P5xx)&&!defined(STM32L4Q5xx)&&\!defined(STM32L4R5xx)&&!defined(STM32L4R7xx)&&!defined(STM32L4R9xx)&&!defined(STM32L4S5xx)&&!defined(STM32L4S7xx)&&!defined(STM32L4S9xx)#endif#if!defined(USE_HAL_DRIVER)#endif#define__STM32L4_CMSIS_VERSION_MAIN(0x01)#define__STM32L4_CMSIS_VERSION_SUB1(0x07)#define__STM32L4_CMSIS_VERSION_SUB2(0x04)#define__STM32L4_CMSIS_VERSION_RC(0x00)#define__STM32L4_CMSIS_VERSION((__STM32L4_CMSIS_VERSION_MAIN<<24)\|(__STM32L4_CMSIS_VERSION_SUB1<<16)\|(__STM32L4_CMSIS_VERSION_SUB2<<8)\|(__STM32L4_CMSIS_VERSION_RC))#ifdefined(STM32L412xx)#include"stm32l412xx.h"#elifdefined(STM32L422xx)#include"stm32l422xx.h"#elifdefined(STM32L431xx)#include"stm32l431xx.h"#elifdefined(STM32L432xx)#include"stm32l432xx.h"#elifdefined(STM32L433xx)#include"stm32l433xx.h"#elifdefined(STM32L442xx)#include"stm32l442xx.h"#elifdefined(STM32L443xx)#include"stm32l443xx.h"#elifdefined(STM32L451xx)#include"stm32l451xx.h"#elifdefined(STM32L452xx)#include"stm32l452xx.h"#elifdefined(STM32L462xx)#include"stm32l462xx.h"#elifdefined(STM32L471xx)#include"stm32l471xx.h"#elifdefined(STM32L475xx)#include"stm32l475xx.h"#elifdefined(STM32L476xx)#include"stm32l476xx.h"#elifdefined(STM32L485xx)#include"stm32l485xx.h"#elifdefined(STM32L486xx)#include"stm32l486xx.h"#elifdefined(STM32L496xx)#include"stm32l496xx.h"#elifdefined(STM32L4A6xx)#include"stm32l4a6xx.h"#elifdefined(STM32L4P5xx)#include"stm32l4p5xx.h"#elifdefined(STM32L4Q5xx)#include"stm32l4q5xx.h"#elifdefined(STM32L4R5xx)#include"stm32l4r5xx.h"#elifdefined(STM32L4R7xx)#include"stm32l4r7xx.h"#elifdefined(STM32L4R9xx)#include"stm32l4r9xx.h"#elifdefined(STM32L4S5xx)#include"stm32l4s5xx.h"#elifdefined(STM32L4S7xx)#include"stm32l4s7xx.h"#elifdefined(STM32L4S9xx)#include"stm32l4s9xx.h"#else#error"PleaseselectfirstthetargetSTM32L4xxdeviceusedinyourapplication(instm32l4xx.hfile)"#endiftypedefenum{RESET=0,SET=!RESET}FlagStatus,ITStatus;typedefenum{DISABLE=0,ENABLE=!DISABLE}FunctionalState;#defineIS_FUNCTIONAL_STATE(STATE)(((STATE)==DISABLE)||((STATE)==ENABLE))typedefenum{SUCCESS=0,ERROR=!SUCCESS}ErrorStatus;#defineSET_BIT(REG,BIT)((REG)|=(BIT))#defineCLEAR_BIT(REG,BIT)((REG)&=~(BIT))#defineREAD_BIT(REG,BIT)((REG)&(BIT))#defineCLEAR_REG(REG)((REG)=(0x0))#defineWRITE_REG(REG,VAL)((REG)=(VAL))#defineREAD_REG(REG)((REG))#defineMODIFY_REG(REG,CLEARMASK,SETMASK)WRITE_REG((REG),(((READ_REG(REG))&(~(CLEARMASK)))|(SETMASK)))#defineATOMIC_SET_BIT(REG,BIT)\do{\uint32_tval;\do{\val=__LDREXW((__IOuint32_t*)&(REG))|(BIT);\}while((__STREXW(val,(__IOuint32_t*)&(REG)))!=0U);\}while(0)#defineATOMIC_CLEAR_BIT(REG,BIT)\do{\uint32_tval;\do{\val=__LDREXW((__IOuint32_t*)&(REG))&~(BIT);\}while((__STREXW(val,(__IOuint32_t*)&(REG)))!=0U);\}while(0)#defineATOMIC_MODIFY_REG(REG,CLEARMSK,SETMASK)\do{\uint32_tval;\do{\val=(__LDREXW((__IOuint32_t*)&(REG))&~(CLEARMSK))|(SETMASK);\}while((__STREXW(val,(__IOuint32_t*)&(REG)))!=0U);\}while(0)#defineATOMIC_SETH_BIT(REG,BIT)\do{\uint16_tval;\do{\val=__LDREXH((__IOuint16_t*)&(REG))|(BIT);\}while((__STREXH(val,(__IOuint16_t*)&(REG)))!=0U);\}while(0)#defineATOMIC_CLEARH_BIT(REG,BIT)\do{\uint16_tval;\do{\val=__LDREXH((__IOuint16_t*)&(REG))&~(BIT);\}while((__STREXH(val,(__IOuint16_t*)&(REG)))!=0U);\}while(0)#defineATOMIC_MODIFYH_REG(REG,CLEARMSK,SETMASK)\do{\uint16_tval;\do{\val=(__LDREXH((__IOuint16_t*)&(REG))&~(CLEARMSK))|(SETMASK);\}while((__STREXH(val,(__IOuint16_t*)&(REG)))!=0U);\}while(0)#definePOSITION_VAL(VAL)(__CLZ(__RBIT(VAL)))#ifdefined(USE_HAL_DRIVER)#include"stm32l4xx_hal.h"#endif#ifdef__cplusplus}#endif#endif